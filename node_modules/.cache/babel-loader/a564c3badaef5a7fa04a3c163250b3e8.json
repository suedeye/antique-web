{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suedeye\\\\task_scopic\\\\my-app\\\\src\\\\Components\\\\ItemDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ItemDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [user, setUser] = useState([]);\n  const [autobidState, setAutobidState] = useState([]);\n  const [bid, setBid] = useState([]);\n  useEffect(() => {\n    fetch(`/item-detail/${id}`).then(response => response.json()).then(data => {\n      setData(data);\n      setBid(parseInt(data.last_bid));\n    });\n  }, [id]);\n  useEffect(() => {\n    fetch('/user').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(user => setUser(user));\n  }, []);\n  useEffect(() => {\n    fetch(`/get-autobid/${id}`).then(response => response.json()).then(autobidState => setAutobidState(autobidState));\n  }, [id]);\n\n  const bidItem = () => {\n    fetch(`/bid/${id}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id\n      })\n    }).then(response => response.json());\n    window.location.reload();\n  };\n\n  const handleAutobidChange = event => {\n    setAutobidState(!autobidState.state);\n    fetch(`/set-autobid`, {\n      method: 'POST',\n      body: JSON.stringify({\n        id: id,\n        state: !autobidState.state\n      })\n    }).then(response => response.json());\n    window.location.reload();\n  };\n\n  const handleBidValue = e => {\n    const re = /^[0-9\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setBid(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data.length > 0 && data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Name:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), data.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Description:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), data.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Initial price:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), data.initial_price + '$']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Actual bid:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), data.last_bid_user == null ? '----' : data.last_bid + '$']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Actual user bid:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), data.last_bid_user == null ? '----' : data.last_bid_user]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: bid,\n          onChange: handleBidValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: bidItem,\n          disabled: data.last_bid_user === user.user,\n          children: \"BID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Auto-bid\", /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: autobidState.state ? true : false,\n          onChange: handleAutobidChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, 'id', true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/home\",\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemDetail, \"di1I+81Zkabk6ftQMHhi964h1Go=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"sources":["C:/Users/Suedeye/task_scopic/my-app/src/Components/ItemDetail.js"],"names":["React","useState","useEffect","Button","Checkbox","useParams","Link","ItemDetail","id","data","setData","user","setUser","autobidState","setAutobidState","bid","setBid","fetch","then","response","json","parseInt","last_bid","ok","bidItem","method","body","JSON","stringify","window","location","reload","handleAutobidChange","event","state","handleBidValue","e","re","target","value","test","length","map","name","description","initial_price","last_bid_user"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport {\r\n    useParams,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nexport const ItemDetail = ()=> {\r\n    const { id } = useParams()\r\n    const [data, setData] = useState([])\r\n    const [user, setUser] = useState([])\r\n    const [autobidState, setAutobidState ] = useState([])\r\n    const [bid, setBid] = useState([])\r\n\r\n    useEffect(()=> {\r\n        fetch(`/item-detail/${id}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setData(data) \r\n            setBid(parseInt(data.last_bid))\r\n        })\r\n    }, [id])\r\n\r\n    useEffect(()=> {\r\n        fetch('/user').then(response=> {\r\n            if(response.ok){\r\n                return response.json()\r\n            }\r\n        }).then(user => setUser(user))\r\n    },[])\r\n\r\n    useEffect(()=> {\r\n        fetch(`/get-autobid/${id}`)\r\n        .then(response => response.json())\r\n        .then(autobidState => setAutobidState(autobidState))\r\n    },[id])\r\n    \r\n    const bidItem = ()=> {\r\n        fetch(`/bid/${id}`,{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id: id\r\n            })\r\n        }).then(response => response.json())\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleAutobidChange = (event) => {\r\n        setAutobidState(!autobidState.state)\r\n        fetch(`/set-autobid`,{\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                id: id,\r\n                state: !autobidState.state\r\n            })\r\n        }).then(response => response.json())\r\n        window.location.reload();\r\n    }\r\n\r\n    const handleBidValue = (e) => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            setBid(e.target.value) \r\n        }\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            {data.length > 0 && data.map(data => \r\n            <div key='id'>                \r\n                <div>                    \r\n                    <strong>\r\n                        Name:{' '}\r\n                    </strong>\r\n                    {data.name}\r\n                </div>  \r\n                <div>                                      \r\n                    <strong>\r\n                        Description:{' '}\r\n                    </strong>\r\n                    {data.description}                     \r\n                </div>\r\n                <div>\r\n                    <strong>\r\n                        Initial price:{' '}\r\n                    </strong>\r\n                    {data.initial_price+'$'}  \r\n                </div>  \r\n                <div>\r\n                    <strong>\r\n                        Actual bid:{' '}\r\n                    </strong>\r\n                    {data.last_bid_user == null ? '----' : data.last_bid+'$'}\r\n                </div>     \r\n                <div>\r\n                    <strong>\r\n                        Actual user bid:{' '}\r\n                    </strong>\r\n                    {data.last_bid_user == null ? '----' : data.last_bid_user}\r\n                </div>\r\n                <div>\r\n                        \r\n                    <input type=\"text\" name=\"name\" value={bid} onChange={handleBidValue}/>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={bidItem} disabled={data.last_bid_user === user.user}>\r\n                    BID\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    Auto-bid\r\n                    <Checkbox checked={autobidState.state ? true : false} onChange={handleAutobidChange}/>\r\n                </div>      \r\n            </div>\r\n            )}\r\n            \r\n            <hr></hr>\r\n            <Link to='/home'>Back</Link>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}