{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Suedeye\\\\task_scopic\\\\my-app\\\\src\\\\Components\\\\SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useTable, useSortBy } from 'react-table';\nimport { COLUMNS } from './columns';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SortingTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const [data, setItem] = useState([]);\n  useEffect(() => {\n    fetch('/home').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setItem(data));\n  }, []);\n  const tableInstance = useTable({\n    columns: columns,\n    data: data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by title\",\n          value: searchTitle,\n          onChange: onChangeSearchTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByTitle,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12 list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n              children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 40\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-danger\",\n        onClick: removeAllTutorials,\n        children: \"Remove All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SortingTable, \"QM6NFzqEGetad7qGL9u2HicoLtg=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["C:/Users/Suedeye/task_scopic/my-app/src/Components/SortingTable.js"],"names":["React","useState","useEffect","useMemo","useTable","useSortBy","COLUMNS","SortingTable","columns","data","setItem","fetch","then","response","ok","json","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","searchTitle","onChangeSearchTitle","findByTitle","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","removeAllTutorials"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useMemo} from \"react\";\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport { COLUMNS } from './columns'\r\nimport './table.css'\r\n\r\nexport const SortingTable = () => {\r\n    \r\n    const columns = useMemo(() => COLUMNS, []) \r\n    const [data, setItem] = useState([])\r\n    \r\n    useEffect(()=> {\r\n        fetch('/home').then(response=> {\r\n            if(response.ok){\r\n                return response.json()\r\n            }\r\n        }).then(data => setItem(data))\r\n    },[])\r\n\r\n    const tableInstance = useTable({\r\n        columns: columns,\r\n        data: data\r\n    },\r\n    useSortBy)\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance\r\n\r\n    return (\r\n        <div className=\"list row\">\r\n            <div className=\"col-md-8\">\r\n                <div className=\"input-group mb-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search by title\"\r\n                        value={searchTitle}\r\n                        onChange={onChangeSearchTitle}\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={findByTitle}\r\n                        >\r\n                        Search\r\n                    </button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n      <div className=\"col-md-12 list\">\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                    {column.isSorted ? (column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼') : ''}\r\n                                </span>\r\n                            </th>\r\n                        ))}                        \r\n                    </tr>                \r\n                ))}                \r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {rows.map(row => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                            {row.cells.map( cell => {\r\n                                return <td {...cell.getCellProps}>{cell.render('Cell')}</td>\r\n                            })}                            \r\n                        </tr>\r\n                    )\r\n                })}                \r\n            </tbody>\r\n        </table>\r\n        </div>\r\n\r\n      <div className=\"col-md-8\">\r\n        <button className=\"btn btn-sm btn-danger\" onClick={removeAllTutorials}>\r\n          Remove All\r\n        </button>\r\n      </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}